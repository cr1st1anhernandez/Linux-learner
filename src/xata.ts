// Generated by Xata Codegen 0.27.0. Please do not edit.
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client'
import { buildClient } from '@xata.io/client'

const tables = [
  {
    name: 'comments',
    columns: [
      { name: 'content', type: 'string' },
      { name: 'userId', type: 'string', notNull: true, defaultValue: 'user' },
      {
        name: 'username',
        type: 'string',
        notNull: true,
        defaultValue: 'userName',
      },
      { name: 'imageUrl', type: 'string' },
      { name: 'numberLikes', type: 'int', notNull: true, defaultValue: '0' },
      { name: 'likedBy', type: 'json', notNull: true, defaultValue: '[]' },
    ],
  },
  {
    name: 'users',
    columns: [
      { name: 'userId', type: 'string', unique: true },
      { name: 'username', type: 'string', unique: true },
      { name: 'likes', type: 'json' },
    ],
  },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Comments = InferredTypes['comments']
export type CommentsRecord = Comments & XataRecord

export type Users = InferredTypes['users']
export type UsersRecord = Users & XataRecord

export interface DatabaseSchema {
  comments: CommentsRecord
  users: UsersRecord
  [key: string]: XataRecord<XataRecord<any>>
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL:
    'https://CRISTIAN-NEFTAL-HERN-NDEZ-RAM-REZ-s-workspace-f35ttc.us-east-1.xata.sh/db/linux-learner-database',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined

export const getXataClient = (): XataClient => {
  if (instance != null) return instance

  instance = new XataClient()
  return instance
}
